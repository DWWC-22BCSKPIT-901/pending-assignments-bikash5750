#include <vector>
#include <iostream>
#include <unordered_map>
using namespace std;

int findJudge(int n, vector<vector<int>>& trust) {
    vector<int> trustCount(n + 1, 0); // to count trust towards a person
    vector<int> trustedByCount(n + 1, 0); // to count how many people trust this person

    for (auto& t : trust) {
        trustCount[t[0]]++; // person t[0] trusts someone
        trustedByCount[t[1]]++; // person t[1] is trusted by someone
    }

    for (int i = 1; i <= n; i++) {
        if (trustCount[i] == 0 && trustedByCount[i] == n - 1) {
            return i; // The judge trusts nobody and is trusted by everyone else
        }
    }

    return -1; // No judge found
}

int main() {
    vector<vector<int>> trust1 = {{1, 2}};
    cout << "Town Judge 1: " << findJudge(2, trust1) << endl; // Output: 2

    vector<vector<int>> trust2 = {{1, 3}, {2, 3}};
    cout << "Town Judge 2: " << findJudge(3, trust2) << endl; // Output: 3

    vector<vector<int>> trust3 = {{1, 3}, {2, 3}, {3, 1}};
    cout << "Town Judge 3: " << findJudge(3, trust3) << endl; // Output: -1

    return 0;
}
