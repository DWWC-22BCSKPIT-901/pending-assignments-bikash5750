#include <vector>
#include <iostream>
#include <queue>
using namespace std;

vector<int> bfsOfGraph(int V, vector<vector<int>>& adj) {
    vector<int> result;
    vector<bool> visited(V, false);
    queue<int> q;
    
    visited[0] = true;
    q.push(0);
    
    while (!q.empty()) {
        int node = q.front();
        q.pop();
        result.push_back(node);
        
        for (int neighbor : adj[node]) {
            if (!visited[neighbor]) {
                visited[neighbor] = true;
                q.push(neighbor);
            }
        }
    }
    
    return result;
}

int main() {
    vector<vector<int>> adj = {{2, 3, 1}, {0}, {0, 4}, {0}, {2}};
    vector<int> bfs = bfsOfGraph(5, adj);
    
    cout << "BFS Traversal: ";
    for (int node : bfs) {
        cout << node << " ";
    }
    cout << endl;
    
    return 0;
}
